[tool.poetry]
name = "rank-torrent-name"
version = "1.6.0"
description = "Rank filenames based on user-defined rules!"
authors = ["Spoked <dreu.lavelle@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/dreulavelle/rank-torrent-name"
package-mode = true

include = [
    "README.md",
    "LICENSE",
    "CHANGELOG.md",
    "RTN/**/*.py",
]

exclude = [
    "site",
    "tests",
    "docs",
    ".github",
    ".gitignore",
    ".DS_Store",
    ".venv",
    "*.env",
    ".vscode",
    ".pytest_cache",
    ".ruff_cache",
    ".mypy_cache",
    "*.egg-info",
    "*.egg",
    "*.dist-info",
    "mkdocs.yml",
    ".pre-commit-config.yaml",
    "*.pyc",
    "__pycache__",
    "*.egg-info",
    "Makefile",
    "coverage.xml",
    "*.svg",
    "*.png",
    "*.jpg",
    "*.jpeg",
    "*.gif",
    "*.bmp",
    "*.tiff",
    "*.webp",
    "*.ico",
    "custom_theme",
    "overrides",
    "dist",
    "build",
    "setup.py",
    "setup.cfg",
]

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.6.3"
regex = "^2023.12.25"
levenshtein = "^0.25.0"
parsett = "^1.5.1"

[tool.poetry.group.dev.dependencies]
coverage = "^7.4.3"
pyperf = "^2.2.0"
ruff = "^0.3.0"
isort = "^5.10.1"
codecov = "^2.1.13"
pytest = "^8.1.1"
pytest-cov = "^5.0.0"
pyright = "^1.1.389"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.1"
mkdocs-material = "^9.5.34"
mkdocstrings = {extras = ["python"], version = "^0.26.1"}
pymdown-extensions = "^10.9"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[[tool.poetry.packages]]
include = "RTN"

[tool.isort]
profile = "black"

[tool.black]
line-length = 129
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | tests
)/
'''

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules/
ignore = [
  "PLR0913", # flask8-bugbear: Too many arguments for a method or function
  "PLR0911", # flask8-bugbear: Too many return statements
  "PLR2004", # flake8-bugbear: Magic value used in comparison
  "S104", # flake8-bandit: Possible binding to all interfaces
  "S108", # flake8-bandit: Probable insecure usage of temp file/directory
  "S311", # flake8-bandit: Standard pseudo-random generators are not suitable for security/cryptographic purposes
  "S101", # ruff: Ignore assert warnings on tests
  "RET505", # ruff: Checks for else statements with a return statement in the preceding if block.
  "RET503"  # ruff: Ignore required explicit returns
]
extend-select = [
  "I",   # isort
  "C90", # mccabe complexity
  "B",   # flake8-bugbear
  "PL",  # pycodestyle
  "S",   # flake8-bandit
  "T10", # flake8-debugger
  "PIE", # flake8-pie
  "T20", # flake8-print
  "Q",   # flake8-quotes
  "RSE", # flake8-raise
  "RET", # flake8-return
  "SLF", # flake8-self
  "SIM", # flake8-simplify
  "ARG", # flake8-unused-arguments
]